### Example Verilog Code for Basic Logic Gates
verilog
module logic_gates (
    input wire A, B,
    output wire AND_out, OR_out, NOT_out, NAND_out, NOR_out, XOR_out
);
    assign AND_out = A & B;
    assign OR_out  = A | B;
    assign NOT_out = ~A;
    assign NAND_out = ~(A & B);
    assign NOR_out  = ~(A | B);
    assign XOR_out  = A ^ B;
endmodule

// Testbench
module testbench;
    reg A, B;
    wire AND_out, OR_out, NOT_out, NAND_out, NOR_out, XOR_out;

    logic_gates uut (.A(A), .B(B), .AND_out(AND_out), .OR_out(OR_out), .NOT_out(NOT_out),
                     .NAND_out(NAND_out), .NOR_out(NOR_out), .XOR_out(XOR_out));

    initial begin
        $monitor("A=%b B=%b | AND=%b OR=%b NOT(A)=%b NAND=%b NOR=%b XOR=%b",
                  A, B, AND_out, OR_out, NOT_out, NAND_out, NOR_out, XOR_out);
        
        A = 0; B = 0; #10;
        A = 0; B = 1; #10;
        A = 1; B = 0; #10;
        A = 1; B = 1; #10;

        $finish;
    end
endmodule
